name: 'Deploy Yak'
description: 'Deploys a yak package to the McNeel server'
inputs:
  package-name:
    description: 'The package name'
    required: true
  token:
    description: 'The YAK Auth token'
    required: true
  build-path:
    description: 'The Build Directory for the Package'
    required: true
  test-run:
    description: 'Publish to the test server'
    required: false
    default: true
  platform:
    description: 'The Platform for the Package'
    required: false
    default: 'win'
branding:
  icon: 'package'
  color: 'yellow'
    
outputs:
  result:
    description: 'Was the upload succesful?'
    value: true # ${{ steps.random-number-generator.outputs.random-number }}
runs:
  using: "composite"
  steps:
    
    - name: Setup Python
      shell: null
      run : |
        pip install wget

    - name: Move to yak package directory
      shell: python
      run: |
        cd ${{ inputs.build-path }}

    # https://discourse.mcneel.com/t/github-action-to-yak/120815/2
    - name: Download Yak
      shell: python
      run: |
        import wget
        url = "http://files.mcneel.com/yak/tools/latest/yak.exe"
        wget.download(url, "yak.exe")

    - name : Enable Yak exe on Unix
      if: runner.os != 'Windows' }}
      shell: bash
      run: chmod +x yak.exe

    - name: Build Package(s)
      shell: python
      run: |
        import subprocess as proc

        platform = ${{ inputs.platform }}
        platform = platform[:3]

        proc.run( [ 'yak.exe', 'build', '--platform', platform ] )

    - name : Upload Yak(s)
      shell: python
      run: |
        import subprocess as proc
        from glob import glob
        
        source="https://yak.rhino3d.com"
        if ${{ inputs.test-run }}:
          source="https://test.yak.rhino3d.com"

        for yakPackage in glob('.\*yak'):
          proc.run( [ 'yak.exe', 'push', yakPackage, '--source', source ] )
